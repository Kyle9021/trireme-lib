// Code generated by MockGen. DO NOT EDIT.
// Source: monitor/remoteapi/client/interfaces.go

package mockclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "go.aporeto.io/trireme-lib/v11/common"
)

// MockAPIClient is a mock of APIClient interface
// nolint
type MockAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockAPIClientMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient
// nolint
type MockAPIClientMockRecorder struct {
	mock *MockAPIClient
}

// NewMockAPIClient creates a new mock instance
// nolint
func NewMockAPIClient(ctrl *gomock.Controller) *MockAPIClient {
	mock := &MockAPIClient{ctrl: ctrl}
	mock.recorder = &MockAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
// nolint
func (_m *MockAPIClient) EXPECT() *MockAPIClientMockRecorder {
	return _m.recorder
}

// SendRequest mocks base method
// nolint
func (_m *MockAPIClient) SendRequest(event *common.EventInfo) error {
	ret := _m.ctrl.Call(_m, "SendRequest", event)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendRequest indicates an expected call of SendRequest
// nolint
func (_mr *MockAPIClientMockRecorder) SendRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "SendRequest", reflect.TypeOf((*MockAPIClient)(nil).SendRequest), arg0)
}
