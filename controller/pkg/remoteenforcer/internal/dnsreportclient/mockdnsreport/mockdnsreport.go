// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_dnsreportclient is a generated GoMock package.
package mockdnsreportclient

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDNSReportClient is a mock of DNSReportClient interface
type MockDNSReportClient struct {
	ctrl     *gomock.Controller
	recorder *MockDNSReportClientMockRecorder
}

// MockDNSReportClientMockRecorder is the mock recorder for MockDNSReportClient
type MockDNSReportClientMockRecorder struct {
	mock *MockDNSReportClient
}

// NewMockDNSReportClient creates a new mock instance
func NewMockDNSReportClient(ctrl *gomock.Controller) *MockDNSReportClient {
	mock := &MockDNSReportClient{ctrl: ctrl}
	mock.recorder = &MockDNSReportClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDNSReportClient) EXPECT() *MockDNSReportClientMockRecorder {
	return m.recorder
}

// Run mocks base method
func (m *MockDNSReportClient) Run(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Run indicates an expected call of Run
func (mr *MockDNSReportClientMockRecorder) Run(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockDNSReportClient)(nil).Run), ctx)
}
