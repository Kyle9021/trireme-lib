// Code generated by MockGen. DO NOT EDIT.
// Source: controller/internal/processmon/interfaces.go

package mockprocessmon

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	policy "go.aporeto.io/trireme-lib/v11/policy"
)

// MockProcessManager is a mock of ProcessManager interface
// nolint
type MockProcessManager struct {
	ctrl     *gomock.Controller
	recorder *MockProcessManagerMockRecorder
}

// MockProcessManagerMockRecorder is the mock recorder for MockProcessManager
// nolint
type MockProcessManagerMockRecorder struct {
	mock *MockProcessManager
}

// NewMockProcessManager creates a new mock instance
// nolint
func NewMockProcessManager(ctrl *gomock.Controller) *MockProcessManager {
	mock := &MockProcessManager{ctrl: ctrl}
	mock.recorder = &MockProcessManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
// nolint
func (_m *MockProcessManager) EXPECT() *MockProcessManagerMockRecorder {
	return _m.recorder
}

// KillRemoteEnforcer mocks base method
// nolint
func (_m *MockProcessManager) KillRemoteEnforcer(contextID string, force bool) error {
	ret := _m.ctrl.Call(_m, "KillRemoteEnforcer", contextID, force)
	ret0, _ := ret[0].(error)
	return ret0
}

// KillRemoteEnforcer indicates an expected call of KillRemoteEnforcer
// nolint
func (_mr *MockProcessManagerMockRecorder) KillRemoteEnforcer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "KillRemoteEnforcer", reflect.TypeOf((*MockProcessManager)(nil).KillRemoteEnforcer), arg0, arg1)
}

// LaunchRemoteEnforcer mocks base method
// nolint
func (_m *MockProcessManager) LaunchRemoteEnforcer(contextID string, refPid int, refNsPath string, arg string, statssecret string, procMountPoint string, enforcerType policy.EnforcerType) (bool, error) {
	ret := _m.ctrl.Call(_m, "LaunchRemoteEnforcer", contextID, refPid, refNsPath, arg, statssecret, procMountPoint, enforcerType)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LaunchRemoteEnforcer indicates an expected call of LaunchRemoteEnforcer
// nolint
func (_mr *MockProcessManagerMockRecorder) LaunchRemoteEnforcer(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "LaunchRemoteEnforcer", reflect.TypeOf((*MockProcessManager)(nil).LaunchRemoteEnforcer), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
